{"version":3,"sources":["dAppSrc/IconNovelDescription.jsx","dAppSrc/components/IconConnect.js","dAppSrc/components/icon-sdk.js","dAppSrc/IconNovelRead.jsx","dAppSrc/components/color.js","dAppSrc/components/InputStyle.jsx","dAppSrc/components/Input.jsx","dAppSrc/IconNovelWrite.jsx","dAppSrc/components/LoadingForComponent.jsx","dAppSrc/IconNovelReadDetail.jsx","App.js","index.js"],"names":["IconNovelDescriptionWrapper","styled","div","_templateObject","IconNovelDescription","react_default","a","createElement","Component","IconConnect","getAddress","Promise","resolve","window","addEventListener","eventHandler","event","_event$detail","detail","type","payload","removeEventListener","dispatchEvent","CustomEvent","sendTransaction","params","_event$detail2","result","provider","HttpProvider","iconService","IconService","CallBuilder","IconBuilder","CallTransactionBuilder","IcxTransactionBuilder","icon_sdk","callBuild","_ref","arguments","length","undefined","from","methodName","to","_ref$params","method","build","sendTxBuild","_ref3","_ref3$params","_ref3$networkId","networkId","NID","_ref3$stepLimit","stepLimit","_ref3$value","value","jsonrpc","nid","timestamp","concat","Date","getTime","toString","version","id","sendTxBuild2","_ref2","_ref2$networkId","_ref2$stepLimit","_ref2$value","IconNovelReadWrapper","IconNovelRead_templateObject","IconNovelRead","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickList","item","readDetailSelectMenu","state","list","getTextList","_this2","textList","className","style","width","map","index","key","onClick","address","title","color","BasicInputWrap","InputStyle_templateObject","BasicLabel","label","attrs","_templateObject2","isFocused","BasicInput","handleFocus","e","setState","onFocus","handleBlur","onFocusAndBlur","onBlur","handleChange","isDirty","target","onChangeText","objectSpread","onKeyDown","keyCode","preventDefault","touched","prevProps","prevState","_this$state","_this$props","step","inputName","isRequired","isReadOnly","message","_this$props$type","defaultValue","disabled","innerRef","maxLength","inputStyle","cn","read-only","data-shrink","htmlFor","reddot","focus","dirty","aria-required","name","readOnly","onChange","autoComplete","ref","IconNovelWriteWrraper","IconNovelWrite_templateObject","IconNovelWrite","onChangeTitle","onKeyDownTitle","onChangeContent","content","writeValidate","alert","onClickWrite","asyncToGenerator","regenerator_default","mark","_callee","_this$state2","msg","txObj","tx","wrap","_context","prev","next","abrupt","IconSDK","SPLITER","uuid","console","log","IconConverter","fromUtf8","CONTRACT_ADDRESS","sent","open","t0","stop","_this$state3","Input","emailInput","placeholder","LoadingForComponent","checkLoading","_this$props$isLoadedD","isLoadedDataList","forEach","Array","isArray","keys","runErrorTimer","_this$props$timeout","timeout","errorMode","errorTimer","clearRunErrorTimer","setTimeout","errorFlag","clearTimeout","isLoading","JSON","stringify","_this$props2","component","_this$props2$loadingC","loadingComponent","_this$props2$errorCom","errorComponent","React","IconNovelReadDetailWrapper","IconNovelReadDetail_templateObject","IconNovelReadDetail","isFirst","getRecommand","selectItem","recommend","getSelectItem","_id","toHex","execute","toNumber","_callee2","_context2","connectAddress","loadingRenderer","errorRenderer","componentRenderer","split","location","query","textObj","lib_default","size","LoadingForComponent_LoadingForComponent","AppWrraper","App_templateObject","App","initState","menuRegist","onClickSelectMenu","data","getAttribute","history","push","selectMenu","menuRenerer","isOn","on","toUtf8","contentRenderer","dAppSrc_IconNovelDescription","assign","dAppSrc_IconNovelRead","dAppSrc_IconNovelWrite","dAppSrc_IconNovelReadDetail","callback","_x","apply","onClickLogin","tab","height","parseQueryString","locationSearch","replace","param","idx","keyValue","decodeURIComponent","ReactDOM","render","react_router_dom","react_router","newProps","search","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b35ba055.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst IconNovelDescriptionWrapper = styled.div`\n  li {\n    margin-top: 10px;\n  }\n`;\n\nclass IconNovelDescription extends Component {\n  render() {\n    return (\n      <IconNovelDescriptionWrapper>\n        <ul>\n          <li>Iconnovel은 소설을 연재하고 싶은 작가들의 놀이터입니다.</li>\n          <li>글을 쓰면 아이콘 블록체인에 기록되어 올라갑니다.</li>\n          <li>블록체인에 기록되면 자신이 쓴글을 증명할수 있습니다.</li>\n        </ul>\n      </IconNovelDescriptionWrapper>\n    );\n  }\n}\n\nexport default IconNovelDescription;\n","const getAddress = () => new Promise((resolve) => {\n  const eventHandler = (event) => {\n    const { type, payload } = event.detail;\n    if (type === 'RESPONSE_ADDRESS') {\n      resolve(payload);\n    }\n    window.removeEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n  };\n  window.addEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n  window.dispatchEvent(new CustomEvent('ICONEX_RELAY_REQUEST', {\n    detail: {\n      type: 'REQUEST_ADDRESS',\n    },\n  }));\n});\n\n\nconst sendTransaction = params => new Promise((resolve) => {\n  const eventHandler = (event) => {\n    const { type, payload } = event.detail;\n    if (type === 'RESPONSE_JSON-RPC') {\n      resolve(payload.result);\n    }\n    window.removeEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n  };\n  window.addEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n  window.dispatchEvent(new CustomEvent('ICONEX_RELAY_REQUEST', {\n    detail: {\n      type: 'REQUEST_JSON-RPC',\n      payload: params,\n    },\n  }));\n});\n\nexport default {\n  getAddress,\n  sendTransaction,\n};","import IconService, { HttpProvider, IconBuilder} from 'icon-sdk-js'\n\n  \n  // const provider = new HttpProvider('https://wallet.icon.foundation/api/v3')\n  const provider = new HttpProvider('https://bicon.net.solidwallet.io/api/v3')\n  \n  const iconService = new IconService(provider)\n  \n  const {\n    CallBuilder,\n    CallTransactionBuilder,\n    IcxTransactionBuilder,\n  } = IconBuilder;\n  \n  const callBuild = ({\n    from,\n    methodName,\n    to,\n    params = {},\n  } = {}) => {\n    const callBuilder = new CallBuilder();\n    const obj = callBuilder\n      .from(from)\n      .to(to)\n      .method(methodName)\n      .params(params)\n      .build();\n    return obj;\n  };\n  \n  const sendTxBuild2 = ({\n    from,\n    to,\n    networkId = window.NID,\n    stepLimit = '0x493e0',\n    value = '0x0',\n  } = {}) => {\n    const TransactionBuilder = new IcxTransactionBuilder();\n    const obj = TransactionBuilder\n      .nid(networkId)\n      .from(from)\n      .to(to)\n      .stepLimit(stepLimit)\n      .value(value)\n      .timestamp(`0x${((new Date()).getTime() * 1000).toString(16)}`)\n      .version('0x3')\n      .build();\n  \n    return {\n      jsonrpc: '2.0',\n      method: 'icx_sendTransaction',\n      params: obj,\n      id: 1,\n    };\n  };\n  \n  const sendTxBuild = ({\n    from,\n    to,\n    methodName,\n    params = {},\n    networkId = window.NID,\n    stepLimit = '0x13d620',\n    value = '0x0',\n  } = {}) => {\n    const callTransactionBuilder = new CallTransactionBuilder();\n    const obj = callTransactionBuilder\n      .nid(networkId)\n      .from(from)\n      .to(to)\n      .stepLimit(stepLimit)\n      .value(value)\n      .timestamp(`0x${((new Date()).getTime() * 1000).toString(16)}`)\n      .method(methodName)\n      .params(params)\n      .version('0x3')\n      .build();\n  \n    return {\n      jsonrpc: '2.0',\n      method: 'icx_sendTransaction',\n      params: obj,\n      id: 1,\n    };\n  };\n  \n  export default {\n    iconService,\n    callBuild,\n    sendTxBuild,\n    sendTxBuild2\n  }","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport IconConnect from './components/IconConnect';\nimport IconSDK from './components/icon-sdk';\nimport { IconConverter } from 'icon-sdk-js';\n\nconst IconNovelReadWrapper = styled.div`\n  .read-title {\n    font-size: 20px;\n    font-weight: 800;\n  }\n  .read-list {\n    margin-top: 20px;\n    border: 2px solid rgb(0, 188, 212);\n    border-radius: 4px;\n  }\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    thead {\n      height: 40px;\n      text-align: center;\n      font-weight: bold;\n      background: #f0f2f5;\n      th {\n        padding: 5px;\n      }\n    }\n  }\n  tbody {\n    cursor: pointer;\n    tr {\n      &:hover {\n        background: rgb(238, 238, 238);\n        font-weight: bold;\n      }\n    }\n    td {\n      padding: 10px;\n      font-size: 12px;\n    }\n  }\n`;\n\nclass IconNovelRead extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n    };\n  }\n  onClickList = item => {\n    this.props.readDetailSelectMenu(item);\n  };\n\n  componentDidMount() {\n    this.props.getTextList();\n  }\n\n  render() {\n    const { textList } = this.props;\n    return (\n      <div>\n        <IconNovelReadWrapper>\n          <div className=\"read-title\">LIST</div>\n          <div className=\"read-list\">\n            <table>\n              <colgroup>\n                <col style={{ width: '30%' }} />\n                <col style={{ width: '70%' }} />\n              </colgroup>\n              <thead>\n                <tr>\n                  <th>address</th>\n                  <th>제목</th>\n                </tr>\n              </thead>\n              <tbody>\n                {textList.map((item, index) => {\n                  return (\n                    <tr\n                      key={index}\n                      onClick={() => {\n                        this.onClickList(item);\n                      }}\n                    >\n                      <td>{item.address}</td>\n                      <td>{item.title}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </IconNovelReadWrapper>\n      </div>\n    );\n  }\n}\n\nexport default IconNovelRead;\n","export default {\n  up: '#00b368',\n  down: '#ff3355',\n  fav: '#f5a623',\n  transparent: 'transparent',\n  opacityGray: 'rgba(255, 255, 255, 0.05)',\n  opacityGray2: 'rgba(0, 0, 0, 0.03)',\n  darkforeground: '#16171a',\n  white: '#fff',\n  black: '#000',\n  whitesmoke: '#f7f7f7',\n  graydark: '#808080',\n  color2626: '#262626',\n  gray08: '#404040',\n  gray09: '#1f1f1f',\n  gray10: '#1a1a1a',\n  gray13: '#212326',\n  gray95: '#f2f2f2',\n  gray20: '#333',\n  gray22: '#383838',\n  gray23: '#232426',\n  gray30: '#4d4d4d',\n  gray40: '#666',\n  gray43: '#e6e6e6',\n  gray60: '#999',\n  gray64: '#3a3b40',\n  gray70: '#b3b3b3',\n  gray75: '#bfbfbf',\n  gray80: '#ccc',\n  gray81: '#cccccc',\n  gray85: '#d9d9d9',\n  gray86: '#dbdbdb',\n  gray87: '#d1c8e6',\n  gray94: '#f0f0f0',\n  gray98: '#fafafa',\n  gray99: '#313236',\n  mainDark: '#27282b',\n  mainDark01: '#212224',\n  mainDark02: '#2e2f33',\n  lightblack: '#343538',\n  vulcan: '#3e3f42',\n  greenDark: '#007343',\n  green: '#00ad48',\n  green01: '#00ad20',\n  green02: '#00b362',\n  greenAlpha: 'rgba(0, 173, 72, 0.9)',\n  lightgreen: '#7accaa',\n  redDark: '#99263b',\n  red: '#ff2659',\n  redAlpha: 'rgba(255, 38, 89, 0.9);',\n  brown01: '#ff4063',\n  brown04: '#99263b',\n  lightred: '#ff99ac',\n  red01: '#ff406c',\n  red02: '#ff4c6a',\n  red03: '#e62e50',\n  aquamarine1: '#33ccab',\n  aquamarine2: '#2bd9b3',\n  aquamarine3: '#21c4a4',\n  purple: '#563eb3',\n  purple01: '#7b57d1',\n  purple02: '#6843bf',\n  purple03: '#eae4f7',\n  purple04: '#a18fcc',\n  purple05: '#7652cc',\n  purple06: '#b899ff',\n  purple07: '#785ce6',\n  purple08: '#e6dbff',\n  purple09: '#efe8ff',\n  purple10: '#473494',\n  purpleOpacity: '#f6f2ff',\n  lightSeeGreen: '#1aaaba',\n  dropdownBg: '#2d2e30',\n  navMainBg: '#17171a',\n  notiBullet: '#00b4cc',\n  redHover: '#db214c',\n  greenHover: '#008f3c'\n};\n","import styled from 'styled-components';\nimport color  from './color';\n\nexport const BasicInputWrap = styled.div`\n  border: 0;\n  display: flex;\n  padding: 0;\n  position: relative;\n  min-width: 0;\n  flex-direction: column;\n  \n  .valiation-text {\n    position: absolute;\n    bottom: 3px;\n    left: 10px;\n    font-size: 12px;\n  }\n\n  &:hover:not(.disabled):not(.read-only) {\n    .basic-label {\n      color: ${color.gray30};\n    }\n    .input-icon > i {\n      color: ${color.gray30};\n    }\n  }\n  &.read-only{\n    .border{\n      background-color:red;\n    }\n  }\n\n  .input-box {\n    color: rgba(0, 0, 0, 0.87);\n    position: relative;\n    font-size: 14px;\n    margin-top: 20px;\n    &.focus{\n      .border{\n        height:2px;\n        background-color:rgb(0,188,212)\n      }\n    }\n    &.dirty:not(.focus){\n      .border{\n        background-color:${color.gray85}\n      }\n    }\n    input:read-only + .border{\n      background-color:transparent;\n      border-bottom:1px dotted #d9d9d9;\n    }\n    \n    .border{\n      position:absolute;\n      bottom:20px;\n      left:0;\n      right:0;\n      height:1px;\n      background-color:${color.gray30}\n    }\n    .basic-input {\n      position:relative;\n      font: inherit;\n      color: currentColor;\n      width: 100%;\n      border: 0;\n      margin: 0;\n      padding: 10px;\n      font-weight:bold;\n      margin-bottom: 20px;\n      outline: none;\n      display: block;\n      min-width: 0;\n      flex-grow: 1;\n      background: none;\n      -webkit-tap-highlight-color: transparent;\n\n      \n      &[required]:after{ content: ' *'; color: red; }\n      &:disabled {\n        color: ${color.gray70};\n        border-bottom: 1px solid ${color.gray85};\n      }\n\n      &:read-only {\n        color: ${color.gray70};\n        border-bottom: 1px dotted ${color.gray85};\n      }\n    }\n\n    .input-icon {\n      position: absolute;\n      right: 10px;\n      top: 0;\n      bottom: 20px;\n      display: flex;\n      align-items: center;\n    }\n    .ic-input-eye {\n      font-size: 20px;\n      color: ${color.gray70};\n    }\n  }\n  &.has-error .input-box {\n    .border {\n      background-color:${color.red} !important;\n      height:1px;\n    }\n    .valiation-text {\n      color: ${color.red};\n    }\n  }\n  &.has-error .fake-select {\n    .border {\n      background-color:${color.red} !important;\n      height:1px;\n    }\n    .valiation-text {\n      color: ${color.red};\n    }\n  }\n`;\n\nexport const BasicLabel = styled.label.attrs({\n  className: 'basic-label'\n})`\n  position: absolute;\n  top: 31px;\n  left: 10px;\n  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n  z-index: 1;\n  transform: ${props =>\n    props.isFocused ? 'translate(0px, -26px)' : 'translate(0px, 0px)'};\n  font-size: ${props => (props.isFocused ? '12px' : '14px')};\n  transform-origin: top left;\n  pointer-events: none;\n  user-select: none;\n  color: ${color.gray70};\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport {\n  BasicInputWrap,\n  BasicLabel\n} from './InputStyle';\n\nclass BasicInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: this.props.isFocused === true || false,\n      isDirty: this.props.isFocused === true || false,\n      touched: {}\n    };\n  }\n\n  handleFocus = e => {\n    // if (this.props.onFocusAndBlur) {\n    //   this.props.onFocusAndBlur(e);\n    // }\n\n    this.setState({ isFocused: true });\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n  handleBlur = e => {\n    if (this.props.onFocusAndBlur) {\n      this.props.onFocusAndBlur(e);\n    }\n    this.setState({\n      isFocused: false\n    });\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n  };\n\n  // handleBlur = field => e => {\n  //   this.setState({\n  //     isFocused: false,\n  //     touched: { ...this.state.touched, [field]: true }\n  //   });\n  // };\n\n  handleChange = e => {\n    let { isDirty } = this.state;\n\n    const { value } = e.target;\n    if (this.props.onChangeText) {\n      this.props.onChangeText(e);\n    }\n    // this.setState({})\n    // if (this.props.onChange) {\n    //   this.props.onChange(e);\n    // }\n\n    //상태 : 글자가 있는지 없는지\n    if (!isDirty && value.length !== 0) {\n      this.setState({ ...this.state, isDirty: true });\n      if (this.props.value && this.props.value === '') {\n        this.setState({ ...this.state, isDirty: false });\n      }\n    } else if (isDirty && value.length === 0) {\n      this.setState({ ...this.state, isDirty: false });\n    }\n  };\n\n  onKeyDown = e => {\n    if (this.props.type === 'number') {\n      if (\n        (e.keyCode !== 8 && e.keyCode !== 0 && e.keyCode < 48) ||\n        (e.keyCode > 57 && e.keyCode !== 190)\n      ) {\n        e.preventDefault();\n      }\n    } else if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n  };\n\n  // componentDidMount() {\n  //   const { defaultValue } = this.props;\n  //   if (defaultValue) {\n  //     this.setState({ isDirty: true });\n  //   }\n  // }\n  componentDidUpdate(prevProps, prevState) {\n    const { isDirty } = this.state;\n    const { value } = this.props;\n    if (value && prevProps.value !== value) {\n      if (!isDirty) {\n        if (value.length !== 0) {\n          this.setState({ ...this.state, isDirty: true });\n        } else {\n          this.setState({ ...this.state, isDirty: false });\n        }\n      } else if (isDirty && value.length === 0) {\n        this.setState({ ...this.state, isDirty: false });\n      }\n    } else if (!value && prevProps.value !== value && isDirty) {\n      this.setState({ ...this.state, isDirty: false });\n    }\n  }\n\n  render() {\n    const { isFocused, isDirty } = this.state;\n    const {\n      step,\n      label,\n      inputName,\n      isRequired,\n      isReadOnly,\n      className,\n      message,\n      // inputIconComponent,\n      type = 'text',\n      defaultValue,\n      disabled,\n      innerRef,\n      value,\n      maxLength,\n      inputStyle\n    } = this.props;\n    return (\n      <BasicInputWrap\n        className={cn(className, { 'read-only': isReadOnly, disabled })}>\n        <BasicLabel\n          data-shrink=\"false\"\n          htmlFor={`input-${inputName}`}\n          isFocused={isFocused || isDirty}>\n          <span className={cn({ reddot: isRequired })}>{label}</span>\n        </BasicLabel>\n        <div\n          className={cn('input-box', {\n            focus: isFocused,\n            dirty: isDirty\n          })}>\n          <input\n            // aria-invalid=\"false\"\n            aria-required={isRequired}\n            className=\"basic-input\"\n            id={`input-${inputName}`}\n            name={inputName}\n            type={type}\n            readOnly={isReadOnly}\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            onKeyDown={this.onKeyDown}\n            autoComplete=\"off\"\n            defaultValue={defaultValue}\n            disabled={disabled}\n            step={step}\n            ref={innerRef}\n            value={value}\n            maxLength={maxLength}\n            style={inputStyle}\n            // onCut={e => e.preventDefault()}\n            // onCopy={e => e.preventDefault()}\n            // onPaste={e => e.preventDefault()}\n          />\n          <div className=\"border\" />\n          <p className=\"valiation-text\">{message}</p>\n          {/* {inputIconComponent} */}\n        </div>\n      </BasicInputWrap>\n    );\n  }\n}\n\nexport default BasicInput;\n\nBasicInput.propTypes = {\n  // onChangeText: PropTypes.func.isRequired,\n  // onFocusAndBlur: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport uuid from 'uuid/v1';\nimport BasicInput from './components/Input';\nimport IconConnect from './components/IconConnect';\nimport IconSDK from './components/icon-sdk';\nimport { IconConverter } from 'icon-sdk-js';\n\nconst IconNovelWriteWrraper = styled.div`\n  .write-title-container {\n  }\n  .write-content-container {\n    margin-top: 30px;\n    margin-bottom: 30px;\n    textarea::placeholder {\n      font-size: 13px;\n      color: #b3b3b3;\n    }\n    textarea {\n      box-sizing: border-box;\n      resize: none;\n      display: block;\n      width: 100%;\n      min-height: 400px;\n      border-radius: 4px;\n      border-width: 1px;\n      border-style: solid;\n      border-color: rgb(217, 217, 217);\n      border-image: initial;\n      padding: 20px;\n      &:focus {\n        border: 2px solid rgb(0, 188, 212);\n        outline: none;\n      }\n    }\n  }\n  .write-button {\n    display: flex;\n    text-align: center;\n    font-size: 16px;\n    background-color: rgb(0, 188, 212);\n    color: white;\n    height: 40px;\n    line-height: 40px;\n    border: 1px solid rgb(0, 188, 212);\n    border-radius: 4px;\n    justify-content: center;\n    cursor: pointer;\n    transition: 0.5s all;\n    position: relative;\n    &:hover {\n      color: rgb(238, 238, 238);\n      font-weight: bold;\n      font-size: 18px;\n    }\n    &:focus {\n      color: black;\n    }\n    &:after {\n      content: '';\n      background: white;\n      display: block;\n      position: absolute;\n      padding-top: 42px;\n      padding-left: 100%;\n      margin-left: 0px;\n      margin-top: 0;\n      opacity: 0;\n      transition: all 0.4s;\n    }\n    &:active:after {\n      padding: 0;\n      margin: 0;\n      opacity: 1;\n      transition: 0s;\n    }\n  }\n`;\n\nclass IconNovelWrite extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      content: '',\n    };\n  }\n  onChangeTitle = e => {\n    this.setState({ title: e.target.value });\n  };\n  onKeyDownTitle = e => {};\n  onChangeContent = e => {\n    this.setState({\n      content: e.target.value,\n    });\n  };\n  writeValidate = () => {\n    const { address } = this.props;\n    const { title, content } = this.state;\n    if (address === '') {\n      alert('로그인이 필요합니다.');\n      return false;\n    } else if (title === '') {\n      alert('제목을 입력해주세요');\n      return false;\n    } else if (content === '') {\n      alert('내용을 입력해주세요');\n      return false;\n    }\n    return true;\n  };\n  onClickWrite = async () => {\n    if (this.writeValidate() === false) {\n      return;\n    }\n    try {\n      //write 버튼 클릭\n      const { sendTxBuild } = IconSDK;\n      const { address } = this.props;\n      const { title, content } = this.state;\n\n      let msg = `${title}${window.SPLITER}${content}${\n        window.SPLITER\n      }${address}${window.SPLITER}${uuid()}`;\n      console.log('msg', msg);\n      console.log('IconConverter.fromUtf8(msg)', IconConverter.fromUtf8(msg));\n      const txObj = sendTxBuild({\n        methodName: 'addWriting',\n        params: {\n          msg: IconConverter.fromUtf8(msg),\n        },\n        from: address,\n        to: window.CONTRACT_ADDRESS,\n      });\n\n      console.log('txObj', txObj);\n      // from: address,\n      const tx = await IconConnect.sendTransaction(txObj);\n      console.log('tx', tx);\n      window.open(`https://tracker.icon.foundation/transaction/${tx}`);\n\n      this.setState({\n        title: '',\n        content: '',\n      });\n    } catch (error) {}\n  };\n  render() {\n    const { title, content } = this.state;\n    return (\n      <IconNovelWriteWrraper>\n        <div className=\"write-title-container\">\n          <BasicInput\n            label={'Title'}\n            inputName=\"write-title\"\n            onChangeText={this.onChangeTitle}\n            onKeyDown={this.onKeyDownTitle}\n            innerRef={this.emailInput}\n            value={title}\n            maxLength=\"30\"\n          />\n        </div>\n        <div className=\"write-content-container\">\n          <textarea\n            placeholder=\"Please write\"\n            onChange={this.onChangeContent}\n            value={content}\n            maxLength=\"500\"\n          />\n        </div>\n        <div className=\"write-button-container\">\n          <div className=\"write-button\" onClick={this.onClickWrite}>\n            Write\n          </div>\n        </div>\n      </IconNovelWriteWrraper>\n    );\n  }\n}\n\nexport default IconNovelWrite;\n","import React from 'react';\n\nexport default class LoadingForComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorFlag: false\n    };\n    this.errorTimer = null;\n  }\n\n  checkLoading = () => {\n    const { isLoadedDataList = [] } = this.props;\n    let result = false;\n    isLoadedDataList.forEach(item => {\n      //배열\n      if (Array.isArray(item) === true) {\n        if (item.length === 0) {\n          result = true;\n        }\n      }\n      //객체\n      else if (typeof item === 'object') {\n        if (Object.keys(item).length === 0) {\n          result = true;\n        }\n      } else if (typeof item === 'string') {\n        if (item === '') {\n          result = true;\n        }\n      } else if (typeof item === 'number') {\n        if (item === 0) {\n          result = true;\n        }\n      } else if (typeof item === 'boolean') {\n        if (item === false) {\n          result = true;\n        }\n      }\n    });\n    return result;\n  };\n\n  runErrorTimer = () => {\n    const { timeout = 10000, errorMode } = this.props;\n    if (this.errorTimer) {\n      this.clearRunErrorTimer();\n    }\n    this.errorTimer = setTimeout(() => {\n      //error관련 코드\n      if (errorMode) {\n        this.setState({ errorFlag: true });\n      }\n    }, timeout);\n  };\n\n  clearRunErrorTimer = () => {\n    clearTimeout(this.errorTimer);\n    this.errorTimer = null;\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      JSON.stringify(prevProps.isLoadedDataList) !==\n      JSON.stringify(this.props.isLoadedDataList)\n    ) {\n      let isLoading = this.checkLoading();\n      if (isLoading === true) {\n        this.runErrorTimer();\n      } else {\n        this.clearRunErrorTimer();\n      }\n      this.setState({\n        errorFlag: false,\n        isLoading: isLoading\n      });\n    }\n  }\n  componentDidMount() {\n    let isLoading = this.checkLoading();\n    if (isLoading === true) {\n      this.runErrorTimer();\n    } else {\n      this.clearRunErrorTimer();\n    }\n    this.setState({\n      isLoading: isLoading\n    });\n  }\n  componentWillUnmount() {\n    this.clearRunErrorTimer();\n  }\n\n  render() {\n    const { isLoading, errorFlag } = this.state;\n    const {\n      component,\n      loadingComponent = <div>loading!</div>,\n      errorComponent = <div>Error</div>,\n      errorMode\n    } = this.props;\n\n    if (errorMode && errorFlag) {\n      return errorComponent;\n    }\n    if (isLoading) {\n      return loadingComponent;\n    } else {\n      return component;\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport QRcode from 'qrcode.react';\nimport LoadingForComponent from './components/LoadingForComponent';\nimport IconConnect from './components/IconConnect';\nimport IconSDK from './components/icon-sdk';\nimport { IconConverter } from 'icon-sdk-js';\n\nconst IconNovelReadDetailWrapper = styled.div`\n  .read-title-container {\n    display: flex;\n    justify-content: space-between;\n    .support-list {\n      font-size: 14px;\n      padding: 5px;\n\n      cursor: pointer;\n      transition: 0.5s all;\n      position: relative;\n      &:hover {\n        color: rgb(238, 238, 238);\n        font-weight: bold;\n      }\n    }\n    .read-title {\n      font-size: 20px;\n      font-weight: 800;\n    }\n  }\n\n  .content-container {\n    margin-top: 30px;\n    .info-container {\n      display: flex;\n      justify-content: space-between;\n      .info-content {\n        display: flex;\n      }\n      .info {\n        margin-left: 10px;\n        margin-bottom: 20px;\n        &.button {\n          width: 100px;\n          box-sizing: border-box;\n          display: flex;\n          text-align: center;\n          font-size: 14px;\n          padding: 5px;\n          background-color: rgb(0, 188, 212);\n          color: white;\n          border: 1px solid rgb(0, 188, 212);\n          border-radius: 4px;\n          justify-content: center;\n          cursor: pointer;\n        }\n      }\n    }\n    .title {\n      padding: 10px;\n    }\n    .content {\n      word-break: break-word;\n      display: block;\n      padding: 10px;\n      border: 1px solid rgb(217, 217, 217);\n      border-radius: 4px;\n      height: calc(100vh - 325px);\n      overflow: auto;\n    }\n  }\n`;\n\nclass IconNovelReadDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      recommend: 0,\n    };\n  }\n  isFirst = true;\n  getRecommand = async () => {\n    try {\n      const selectItem = this.getSelectItem();\n      if (selectItem) {\n        this.isFirst = false;\n        const recommend = await IconSDK.iconService\n          .call(\n            IconSDK.callBuild({\n              methodName: 'getLikeCntById',\n              params: {\n                _id: IconConverter.toHex(selectItem.index),\n              },\n              to: window.CONTRACT_ADDRESS,\n            }),\n          )\n          .execute();\n        this.setState({\n          recommend: IconConverter.toNumber(recommend),\n        });\n      }\n    } catch (error) {}\n  };\n  componentDidMount() {\n    this.getRecommand();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.textObj !== this.props.textObj) {\n      this.getRecommand();\n    }\n  }\n  recommend = async () => {\n    try {\n      const selectItem = this.getSelectItem();\n      let address = this.props.address;\n      if (address) {\n        const txObj = IconSDK.sendTxBuild({\n          methodName: 'addLikeCnt',\n          params: {\n            _id: IconConverter.toHex(selectItem.index),\n          },\n          from: address,\n          to: window.CONTRACT_ADDRESS,\n        });\n        // from: address,\n        const tx = await IconConnect.sendTransaction(txObj);\n        //재조회\n        setTimeout(() => {\n          this.getRecommand();\n        }, 2000);\n      } else {\n        this.props.connectAddress(this.recommend);\n      }\n    } catch (error) {}\n  };\n  loadingRenderer = () => {\n    return <div>Loading</div>;\n  };\n  errorRenderer = () => {\n    return <div>Error</div>;\n  };\n  componentRenderer = () => {\n    const { recommend } = this.state;\n    let selectItem = this.getSelectItem();\n    return (\n      <div>\n        <div className=\"info-container\">\n          <div className=\"info-content\">\n            <div className=\"info\">추천수:{recommend}</div>\n          </div>\n\n          <div className=\"info button\" onClick={this.recommend}>\n            추천하기\n          </div>\n        </div>\n        <div className=\"title\">제목 : {selectItem.title}</div>\n        <div className=\"content\">\n          {selectItem.content.split('\\n').map((item, index) => {\n            return <div key={index}>{item}</div>;\n          })}\n        </div>\n      </div>\n    );\n  };\n  getSelectItem = () => {\n    let uuid = this.props.location.query.uuid;\n    let selectItem = this.props.textObj[uuid];\n    return selectItem;\n  };\n  render() {\n    let uuid = this.props.location.query.uuid;\n    let selectItem = this.getSelectItem();\n    if (!uuid || !selectItem) {\n      return null;\n    }\n\n    return (\n      <IconNovelReadDetailWrapper>\n        <div className=\"read-title-container\">\n          <div className=\"read-title\">\n            <div>Address : {selectItem.address}</div>\n            <span className=\"support-list\">\n              위주소나 qr코드로 후원하실수있습니다.\n            </span>\n          </div>\n          <div>\n            <QRcode value={selectItem.address} size={60} />\n          </div>\n        </div>\n        <div className=\"content-container\">\n          <LoadingForComponent\n            isLoadedDataList={[!!selectItem.address]}\n            component={this.componentRenderer()}\n            loadingComponent={this.componentRenderer()}\n            errorComponent={this.componentRenderer()}\n            errorMode={true}\n            timeout={15000}\n          />\n        </div>\n      </IconNovelReadDetailWrapper>\n    );\n  }\n}\n\nexport default IconNovelReadDetail;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport cn from 'classnames';\nimport IconNovelDescription from './dAppSrc/IconNovelDescription';\nimport IconNovelRead from './dAppSrc/IconNovelRead';\nimport IconNovelWrite from './dAppSrc/IconNovelWrite';\nimport IconNovelReadDetail from './dAppSrc/IconNovelReadDetail';\nimport IconConnect from './dAppSrc/components/IconConnect';\nimport IconSDK from './dAppSrc/components/icon-sdk';\nimport { IconConverter } from 'icon-sdk-js';\n\nconst AppWrraper = styled.div`\n  font-family: Noto Sans, AppleGothic, sans-serif;\n  .gnb-title {\n    display: flex;\n    background-color: rgb(0, 188, 212);\n    height: 64px;\n    line-height: 64px;\n    box-sizing: border-box;\n    color: white;\n    padding: 0 24px;\n    font-size: 24px;\n    font-weight: 500;\n    text-align: left;\n    justify-content: space-between;\n    .login {\n      cursor: pointer;\n      font-size: 16px;\n    }\n  }\n  .content {\n    display: flex;\n    .content-left {\n      flex: 1;\n      width: 250px;\n      color: rgba(0, 0, 0, 0.87);\n      background-color: rgb(255, 255, 255);\n      box-sizing: border-box;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 10px,\n        rgba(0, 0, 0, 0.23) 0px 3px 10px;\n      height: 100%;\n      width: 256px;\n      transform: translate(0px, 0px);\n      transition: transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n      border-radius: 0px;\n      overflow: auto;\n      .menu-sell-item:first-child {\n        margin-top: 10px;\n      }\n      .menu-sell-item {\n        cursor: pointer;\n        font-weight: 300;\n        box-sizing: border-box;\n        height: 50px;\n        padding: 15px;\n        margin: 0;\n        border: 0;\n        vertical-align: baseline;\n        -webkit-text-size-adjust: none;\n        font-style: normal;\n        transition: all 0.7s;\n        &:hover {\n          background-color: rgb(238, 238, 238);\n          font-weight: 600;\n        }\n        &.on {\n          background-color: rgb(238, 238, 238);\n          font-weight: 600;\n        }\n      }\n    }\n    .content-right {\n      width: calc(100vw - 256px);\n      padding: 30px 30px;\n    }\n  }\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let state = this.initState();\n    if (this.props.location.query.tab) {\n      state.selectMenu = this.props.location.query.tab;\n    } else {\n      state.selectMenu = 'decription';\n    }\n    this.state = state;\n  }\n  initState = () => {\n    return {\n      selectItem: {},\n      textList: [],\n      address: '',\n      textObj: {},\n    };\n  };\n  menuRegist = [\n    {\n      key: 'decription',\n      label: '설명',\n    },\n    {\n      key: 'read',\n      label: '글보기',\n    },\n    {\n      key: 'write',\n      label: '글쓰기',\n    },\n  ];\n  onClickSelectMenu = e => {\n    let data = e.target.getAttribute('data');\n    this.props.history.push(`/?tab=${data}`);\n    this.setState({ selectMenu: data });\n  };\n\n  readDetailSelectMenu = item => {\n    this.props.history.push(`/?tab=readDetail&uuid=${item.uuid}`);\n    this.setState({ selectMenu: 'readDetail', selectItem: item });\n  };\n\n  menuRenerer = () => {\n    const { selectMenu } = this.state;\n    return this.menuRegist.map((item, index) => {\n      let isOn = false;\n      if (\n        selectMenu === item.key ||\n        (selectMenu === 'readDetail' && item.key === 'read')\n      ) {\n        isOn = true;\n      }\n      return (\n        <div\n          className={cn('menu-sell-item', { on: isOn })}\n          data={item.key}\n          onClick={this.onClickSelectMenu}\n          key={index}\n        >\n          {item.label}\n        </div>\n      );\n    });\n  };\n\n  getTextList = async () => {\n    try {\n      let result = [];\n      const resList = await IconSDK.iconService\n        .call(\n          IconSDK.callBuild({\n            methodName: 'getWriting',\n            params: {},\n            to: window.CONTRACT_ADDRESS,\n          }),\n        )\n        .execute();\n      //split\n      resList.forEach(item => {\n        let converted = IconConverter.toUtf8(item);\n        let split = converted.split(window.SPLITER);\n        result.push(split);\n      });\n      let textObj = {};\n      let textList = [];\n      console.log('result', result);\n      //가공\n      result.forEach((item, index) => {\n        if (item[3]) {\n          let target = {\n            title: item[0],\n            content: item[1],\n            address: item[2],\n            uuid: item[3],\n            index: index,\n          };\n          textObj[item[3]] = target;\n          textList.push(target);\n        }\n      });\n      this.setState({ textList: textList, textObj });\n    } catch (error) {}\n  };\n\n  contentRenderer = () => {\n    const { selectMenu, selectItem, address, textList, textObj } = this.state;\n    switch (selectMenu) {\n      case 'decription':\n        return <IconNovelDescription {...this.props} address={address} />;\n      case 'read':\n        return (\n          <IconNovelRead\n            readDetailSelectMenu={this.readDetailSelectMenu}\n            {...this.props}\n            address={address}\n            getTextList={this.getTextList}\n            {...this.state}\n          />\n        );\n      case 'write':\n        return (\n          <IconNovelWrite\n            {...this.props}\n            address={address}\n            getTextList={this.getTextList}\n          />\n        );\n      case 'readDetail':\n        return (\n          <IconNovelReadDetail\n            selectItem={selectItem}\n            {...this.props}\n            address={address}\n            getTextList={this.getTextList}\n            {...this.state}\n            connectAddress={this.connectAddress}\n          />\n        );\n      default:\n        break;\n    }\n  };\n  connectAddress = async callback => {\n    try {\n      let address = await IconConnect.getAddress();\n      this.setState(\n        {\n          address: address,\n        },\n        () => {\n          if (callback) {\n            callback();\n          }\n        },\n      );\n    } catch (error) {}\n  };\n\n  onClickLogin = () => {\n    const { address } = this.state;\n    if (address === '') {\n      this.connectAddress();\n    }\n  };\n\n  componentDidMount() {\n    this.getTextList();\n  }\n  render() {\n    const { selectMenu, address } = this.state;\n    return (\n      <AppWrraper>\n        <div className=\"gnb-title\">\n          <div>\n            <span className=\"icon\">Icon</span>ovel\n          </div>\n          <div className=\"login\" onClick={this.onClickLogin}>\n            {address !== '' ? address : 'login'}\n          </div>\n        </div>\n        <div className=\"content\" style={{ height: 'calc( 100vh - 64px )' }}>\n          <div className=\"content-left\">{this.menuRenerer()}</div>\n          <div className=\"content-right\">{this.contentRenderer()}</div>\n        </div>\n      </AppWrraper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport 'array-includes';\nimport 'custom-event-polyfill';\n\nfunction parseQueryString(locationSearch) {\n  let query = {};\n  if (locationSearch) {\n    locationSearch = locationSearch.replace('?', '');\n    const params = locationSearch.split('&');\n    params.forEach((param, idx) => {\n      const keyValue = param.split('=');\n      query[keyValue[0]] = decodeURIComponent(keyValue[1]);\n    });\n  }\n  return query;\n}\n\nReactDOM.render(\n    <BrowserRouter>\n      <Route\n        render={props => {\n          const newProps = {\n            ...props,\n            location: {\n              ...props.location,\n              query: parseQueryString(props.location.search),\n              parseQueryString:parseQueryString\n            }\n          };\n\n          return <App {...newProps} />;\n        }}\n      />\n    </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}