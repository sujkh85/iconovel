{"version":3,"sources":["dAppSrc/IconNovelDescription.jsx","dAppSrc/components/IconConnect.js","dAppSrc/IconNovelRead.jsx","dAppSrc/components/color.js","dAppSrc/components/InputStyle.jsx","dAppSrc/components/Input.jsx","dAppSrc/IconNovelWrite.jsx","dAppSrc/components/LoadingForComponent.jsx","dAppSrc/IconNovelReadDetail.jsx","App.js","index.js","dAppSrc/components/icon-sdk.js"],"names":["IconNovelDescriptionWrapper","styled","div","_templateObject","IconNovelDescription","react_default","a","createElement","Component","IconConnect","getAddress","Promise","resolve","window","addEventListener","eventHandler","event","_event$detail","detail","type","payload","removeEventListener","dispatchEvent","CustomEvent","sendTransaction","params","_event$detail2","result","IconNovelReadWrapper","IconNovelRead_templateObject","IconNovelRead","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickList","item","readDetailSelectMenu","state","list","getTextList","_this2","textList","className","style","width","map","index","key","onClick","address","title","color","BasicInputWrap","InputStyle_templateObject","BasicLabel","label","attrs","_templateObject2","isFocused","BasicInput","handleFocus","e","setState","onFocus","handleBlur","onFocusAndBlur","onBlur","handleChange","isDirty","value","target","onChangeText","length","objectSpread","onKeyDown","keyCode","preventDefault","touched","prevProps","prevState","_this$state","_this$props","step","inputName","isRequired","isReadOnly","message","_this$props$type","defaultValue","disabled","innerRef","maxLength","inputStyle","cn","read-only","data-shrink","htmlFor","concat","reddot","focus","dirty","aria-required","id","name","readOnly","onChange","autoComplete","ref","IconNovelWriteWrraper","IconNovelWrite_templateObject","IconNovelWrite","onChangeTitle","onKeyDownTitle","onChangeContent","content","writeValidate","alert","onClickWrite","asyncToGenerator","regenerator_default","mark","_callee","sendTxBuild","_this$state2","msg","txObj","tx","wrap","_context","prev","next","abrupt","IconSDK","SPLITER","uuid","console","log","IconConverter","fromUtf8","methodName","from","to","CONTRACT_ADDRESS","sent","open","t0","stop","_this$state3","Input","emailInput","placeholder","LoadingForComponent","checkLoading","_this$props$isLoadedD","isLoadedDataList","forEach","Array","isArray","keys","runErrorTimer","_this$props$timeout","timeout","errorMode","errorTimer","clearRunErrorTimer","setTimeout","errorFlag","clearTimeout","isLoading","JSON","stringify","_this$props2","component","_this$props2$loadingC","loadingComponent","_this$props2$errorCom","errorComponent","React","IconNovelReadDetailWrapper","IconNovelReadDetail_templateObject","IconNovelReadDetail","isFirst","getRecommand","selectItem","recommend","getSelectItem","iconService","callBuild","_id","toHex","execute","toNumber","_callee2","_context2","connectAddress","loadingRenderer","errorRenderer","componentRenderer","split","location","query","textObj","lib_default","size","LoadingForComponent_LoadingForComponent","AppWrraper","App_templateObject","App","initState","menuRegist","onClickSelectMenu","data","getAttribute","history","push","pathname","selectMenu","menuRenerer","isOn","on","toUtf8","contentRenderer","dAppSrc_IconNovelDescription","assign","dAppSrc_IconNovelRead","dAppSrc_IconNovelWrite","dAppSrc_IconNovelReadDetail","_ref2","callback","_x","apply","arguments","onClickLogin","tab","height","parseQueryString","locationSearch","replace","param","idx","keyValue","decodeURIComponent","ReactDOM","render","react_router_dom","react_router","newProps","search","src_App","document","getElementById","process","provider","icon_sdk_js__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","icon_sdk_js__WEBPACK_IMPORTED_MODULE_0___default","n","HttpProvider","IconService","CallBuilder","IconBuilder","CallTransactionBuilder","IcxTransactionBuilder","__webpack_exports__","_ref","undefined","_ref$params","method","build","_ref2$params","_ref2$networkId","networkId","NID","_ref2$stepLimit","stepLimit","_ref2$value","jsonrpc","nid","timestamp","Date","getTime","toString","version"],"mappings":"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","file":"static/js/main.4373248a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst IconNovelDescriptionWrapper = styled.div`\n  li {\n    margin-top: 10px;\n  }\n`;\n\nclass IconNovelDescription extends Component {\n  render() {\n    return (\n      <IconNovelDescriptionWrapper>\n        <ul>\n          <li>Iconnovel은 소설을 연재하고 싶은 작가들의 놀이터입니다.</li>\n          <li>글을 쓰면 아이콘 블록체인에 기록되어 올라갑니다.</li>\n          <li>블록체인에 기록되면 자신이 쓴글을 증명할수 있습니다.</li>\n        </ul>\n      </IconNovelDescriptionWrapper>\n    );\n  }\n}\n\nexport default IconNovelDescription;\n","const getAddress = () => new Promise((resolve) => {\n  const eventHandler = (event) => {\n    const { type, payload } = event.detail;\n    if (type === 'RESPONSE_ADDRESS') {\n      resolve(payload);\n    }\n    window.removeEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n  };\n  window.addEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n  window.dispatchEvent(new CustomEvent('ICONEX_RELAY_REQUEST', {\n    detail: {\n      type: 'REQUEST_ADDRESS',\n    },\n  }));\n});\n\n\nconst sendTransaction = params => new Promise((resolve) => {\n  const eventHandler = (event) => {\n    const { type, payload } = event.detail;\n    if (type === 'RESPONSE_JSON-RPC') {\n      resolve(payload.result);\n    }\n    window.removeEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n  };\n  window.addEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n  window.dispatchEvent(new CustomEvent('ICONEX_RELAY_REQUEST', {\n    detail: {\n      type: 'REQUEST_JSON-RPC',\n      payload: params,\n    },\n  }));\n});\n\nexport default {\n  getAddress,\n  sendTransaction,\n};","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport IconConnect from './components/IconConnect';\nimport IconSDK from './components/icon-sdk';\nimport { IconConverter } from 'icon-sdk-js';\n\nconst IconNovelReadWrapper = styled.div`\n  .read-title {\n    font-size: 20px;\n    font-weight: 800;\n  }\n  .read-list {\n    margin-top: 20px;\n    border: 2px solid rgb(0, 188, 212);\n    border-radius: 4px;\n  }\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    thead {\n      height: 40px;\n      text-align: center;\n      font-weight: bold;\n      background: #f0f2f5;\n      th {\n        padding: 5px;\n      }\n    }\n  }\n  tbody {\n    cursor: pointer;\n    tr {\n      &:hover {\n        background: rgb(238, 238, 238);\n        font-weight: bold;\n      }\n    }\n    td {\n      padding: 10px;\n      font-size: 12px;\n    }\n  }\n`;\n\nclass IconNovelRead extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [],\n    };\n  }\n  onClickList = item => {\n    this.props.readDetailSelectMenu(item);\n  };\n\n  componentDidMount() {\n    this.props.getTextList();\n  }\n\n  render() {\n    const { textList } = this.props;\n    return (\n      <div>\n        <IconNovelReadWrapper>\n          <div className=\"read-title\">LIST</div>\n          <div className=\"read-list\">\n            <table>\n              <colgroup>\n                <col style={{ width: '30%' }} />\n                <col style={{ width: '70%' }} />\n              </colgroup>\n              <thead>\n                <tr>\n                  <th>address</th>\n                  <th>제목</th>\n                </tr>\n              </thead>\n              <tbody>\n                {textList.map((item, index) => {\n                  return (\n                    <tr\n                      key={index}\n                      onClick={() => {\n                        this.onClickList(item);\n                      }}\n                    >\n                      <td>{item.address}</td>\n                      <td>{item.title}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </IconNovelReadWrapper>\n      </div>\n    );\n  }\n}\n\nexport default IconNovelRead;\n","export default {\n  up: '#00b368',\n  down: '#ff3355',\n  fav: '#f5a623',\n  transparent: 'transparent',\n  opacityGray: 'rgba(255, 255, 255, 0.05)',\n  opacityGray2: 'rgba(0, 0, 0, 0.03)',\n  darkforeground: '#16171a',\n  white: '#fff',\n  black: '#000',\n  whitesmoke: '#f7f7f7',\n  graydark: '#808080',\n  color2626: '#262626',\n  gray08: '#404040',\n  gray09: '#1f1f1f',\n  gray10: '#1a1a1a',\n  gray13: '#212326',\n  gray95: '#f2f2f2',\n  gray20: '#333',\n  gray22: '#383838',\n  gray23: '#232426',\n  gray30: '#4d4d4d',\n  gray40: '#666',\n  gray43: '#e6e6e6',\n  gray60: '#999',\n  gray64: '#3a3b40',\n  gray70: '#b3b3b3',\n  gray75: '#bfbfbf',\n  gray80: '#ccc',\n  gray81: '#cccccc',\n  gray85: '#d9d9d9',\n  gray86: '#dbdbdb',\n  gray87: '#d1c8e6',\n  gray94: '#f0f0f0',\n  gray98: '#fafafa',\n  gray99: '#313236',\n  mainDark: '#27282b',\n  mainDark01: '#212224',\n  mainDark02: '#2e2f33',\n  lightblack: '#343538',\n  vulcan: '#3e3f42',\n  greenDark: '#007343',\n  green: '#00ad48',\n  green01: '#00ad20',\n  green02: '#00b362',\n  greenAlpha: 'rgba(0, 173, 72, 0.9)',\n  lightgreen: '#7accaa',\n  redDark: '#99263b',\n  red: '#ff2659',\n  redAlpha: 'rgba(255, 38, 89, 0.9);',\n  brown01: '#ff4063',\n  brown04: '#99263b',\n  lightred: '#ff99ac',\n  red01: '#ff406c',\n  red02: '#ff4c6a',\n  red03: '#e62e50',\n  aquamarine1: '#33ccab',\n  aquamarine2: '#2bd9b3',\n  aquamarine3: '#21c4a4',\n  purple: '#563eb3',\n  purple01: '#7b57d1',\n  purple02: '#6843bf',\n  purple03: '#eae4f7',\n  purple04: '#a18fcc',\n  purple05: '#7652cc',\n  purple06: '#b899ff',\n  purple07: '#785ce6',\n  purple08: '#e6dbff',\n  purple09: '#efe8ff',\n  purple10: '#473494',\n  purpleOpacity: '#f6f2ff',\n  lightSeeGreen: '#1aaaba',\n  dropdownBg: '#2d2e30',\n  navMainBg: '#17171a',\n  notiBullet: '#00b4cc',\n  redHover: '#db214c',\n  greenHover: '#008f3c'\n};\n","import styled from 'styled-components';\nimport color  from './color';\n\nexport const BasicInputWrap = styled.div`\n  border: 0;\n  display: flex;\n  padding: 0;\n  position: relative;\n  min-width: 0;\n  flex-direction: column;\n  \n  .valiation-text {\n    position: absolute;\n    bottom: 3px;\n    left: 10px;\n    font-size: 12px;\n  }\n\n  &:hover:not(.disabled):not(.read-only) {\n    .basic-label {\n      color: ${color.gray30};\n    }\n    .input-icon > i {\n      color: ${color.gray30};\n    }\n  }\n  &.read-only{\n    .border{\n      background-color:red;\n    }\n  }\n\n  .input-box {\n    color: rgba(0, 0, 0, 0.87);\n    position: relative;\n    font-size: 14px;\n    margin-top: 20px;\n    &.focus{\n      .border{\n        height:2px;\n        background-color:rgb(0,188,212)\n      }\n    }\n    &.dirty:not(.focus){\n      .border{\n        background-color:${color.gray85}\n      }\n    }\n    input:read-only + .border{\n      background-color:transparent;\n      border-bottom:1px dotted #d9d9d9;\n    }\n    \n    .border{\n      position:absolute;\n      bottom:20px;\n      left:0;\n      right:0;\n      height:1px;\n      background-color:${color.gray30}\n    }\n    .basic-input {\n      position:relative;\n      font: inherit;\n      color: currentColor;\n      width: 100%;\n      border: 0;\n      margin: 0;\n      padding: 10px;\n      font-weight:bold;\n      margin-bottom: 20px;\n      outline: none;\n      display: block;\n      min-width: 0;\n      flex-grow: 1;\n      background: none;\n      -webkit-tap-highlight-color: transparent;\n\n      \n      &[required]:after{ content: ' *'; color: red; }\n      &:disabled {\n        color: ${color.gray70};\n        border-bottom: 1px solid ${color.gray85};\n      }\n\n      &:read-only {\n        color: ${color.gray70};\n        border-bottom: 1px dotted ${color.gray85};\n      }\n    }\n\n    .input-icon {\n      position: absolute;\n      right: 10px;\n      top: 0;\n      bottom: 20px;\n      display: flex;\n      align-items: center;\n    }\n    .ic-input-eye {\n      font-size: 20px;\n      color: ${color.gray70};\n    }\n  }\n  &.has-error .input-box {\n    .border {\n      background-color:${color.red} !important;\n      height:1px;\n    }\n    .valiation-text {\n      color: ${color.red};\n    }\n  }\n  &.has-error .fake-select {\n    .border {\n      background-color:${color.red} !important;\n      height:1px;\n    }\n    .valiation-text {\n      color: ${color.red};\n    }\n  }\n`;\n\nexport const BasicLabel = styled.label.attrs({\n  className: 'basic-label'\n})`\n  position: absolute;\n  top: 31px;\n  left: 10px;\n  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n  z-index: 1;\n  transform: ${props =>\n    props.isFocused ? 'translate(0px, -26px)' : 'translate(0px, 0px)'};\n  font-size: ${props => (props.isFocused ? '12px' : '14px')};\n  transform-origin: top left;\n  pointer-events: none;\n  user-select: none;\n  color: ${color.gray70};\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport {\n  BasicInputWrap,\n  BasicLabel\n} from './InputStyle';\n\nclass BasicInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: this.props.isFocused === true || false,\n      isDirty: this.props.isFocused === true || false,\n      touched: {}\n    };\n  }\n\n  handleFocus = e => {\n    // if (this.props.onFocusAndBlur) {\n    //   this.props.onFocusAndBlur(e);\n    // }\n\n    this.setState({ isFocused: true });\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n  handleBlur = e => {\n    if (this.props.onFocusAndBlur) {\n      this.props.onFocusAndBlur(e);\n    }\n    this.setState({\n      isFocused: false\n    });\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n  };\n\n  // handleBlur = field => e => {\n  //   this.setState({\n  //     isFocused: false,\n  //     touched: { ...this.state.touched, [field]: true }\n  //   });\n  // };\n\n  handleChange = e => {\n    let { isDirty } = this.state;\n\n    const { value } = e.target;\n    if (this.props.onChangeText) {\n      this.props.onChangeText(e);\n    }\n    // this.setState({})\n    // if (this.props.onChange) {\n    //   this.props.onChange(e);\n    // }\n\n    //상태 : 글자가 있는지 없는지\n    if (!isDirty && value.length !== 0) {\n      this.setState({ ...this.state, isDirty: true });\n      if (this.props.value && this.props.value === '') {\n        this.setState({ ...this.state, isDirty: false });\n      }\n    } else if (isDirty && value.length === 0) {\n      this.setState({ ...this.state, isDirty: false });\n    }\n  };\n\n  onKeyDown = e => {\n    if (this.props.type === 'number') {\n      if (\n        (e.keyCode !== 8 && e.keyCode !== 0 && e.keyCode < 48) ||\n        (e.keyCode > 57 && e.keyCode !== 190)\n      ) {\n        e.preventDefault();\n      }\n    } else if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n  };\n\n  // componentDidMount() {\n  //   const { defaultValue } = this.props;\n  //   if (defaultValue) {\n  //     this.setState({ isDirty: true });\n  //   }\n  // }\n  componentDidUpdate(prevProps, prevState) {\n    const { isDirty } = this.state;\n    const { value } = this.props;\n    if (value && prevProps.value !== value) {\n      if (!isDirty) {\n        if (value.length !== 0) {\n          this.setState({ ...this.state, isDirty: true });\n        } else {\n          this.setState({ ...this.state, isDirty: false });\n        }\n      } else if (isDirty && value.length === 0) {\n        this.setState({ ...this.state, isDirty: false });\n      }\n    } else if (!value && prevProps.value !== value && isDirty) {\n      this.setState({ ...this.state, isDirty: false });\n    }\n  }\n\n  render() {\n    const { isFocused, isDirty } = this.state;\n    const {\n      step,\n      label,\n      inputName,\n      isRequired,\n      isReadOnly,\n      className,\n      message,\n      // inputIconComponent,\n      type = 'text',\n      defaultValue,\n      disabled,\n      innerRef,\n      value,\n      maxLength,\n      inputStyle\n    } = this.props;\n    return (\n      <BasicInputWrap\n        className={cn(className, { 'read-only': isReadOnly, disabled })}>\n        <BasicLabel\n          data-shrink=\"false\"\n          htmlFor={`input-${inputName}`}\n          isFocused={isFocused || isDirty}>\n          <span className={cn({ reddot: isRequired })}>{label}</span>\n        </BasicLabel>\n        <div\n          className={cn('input-box', {\n            focus: isFocused,\n            dirty: isDirty\n          })}>\n          <input\n            // aria-invalid=\"false\"\n            aria-required={isRequired}\n            className=\"basic-input\"\n            id={`input-${inputName}`}\n            name={inputName}\n            type={type}\n            readOnly={isReadOnly}\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            onKeyDown={this.onKeyDown}\n            autoComplete=\"off\"\n            defaultValue={defaultValue}\n            disabled={disabled}\n            step={step}\n            ref={innerRef}\n            value={value}\n            maxLength={maxLength}\n            style={inputStyle}\n            // onCut={e => e.preventDefault()}\n            // onCopy={e => e.preventDefault()}\n            // onPaste={e => e.preventDefault()}\n          />\n          <div className=\"border\" />\n          <p className=\"valiation-text\">{message}</p>\n          {/* {inputIconComponent} */}\n        </div>\n      </BasicInputWrap>\n    );\n  }\n}\n\nexport default BasicInput;\n\nBasicInput.propTypes = {\n  // onChangeText: PropTypes.func.isRequired,\n  // onFocusAndBlur: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport uuid from 'uuid/v1';\nimport BasicInput from './components/Input';\nimport IconConnect from './components/IconConnect';\nimport IconSDK from './components/icon-sdk';\nimport { IconConverter } from 'icon-sdk-js';\n\nconst IconNovelWriteWrraper = styled.div`\n  .write-title-container {\n  }\n  .write-content-container {\n    margin-top: 30px;\n    margin-bottom: 30px;\n    textarea::placeholder {\n      font-size: 13px;\n      color: #b3b3b3;\n    }\n    textarea {\n      box-sizing: border-box;\n      resize: none;\n      display: block;\n      width: 100%;\n      min-height: 400px;\n      border-radius: 4px;\n      border-width: 1px;\n      border-style: solid;\n      border-color: rgb(217, 217, 217);\n      border-image: initial;\n      padding: 20px;\n      &:focus {\n        border: 2px solid rgb(0, 188, 212);\n        outline: none;\n      }\n    }\n  }\n  .write-button {\n    display: flex;\n    text-align: center;\n    font-size: 16px;\n    background-color: rgb(0, 188, 212);\n    color: white;\n    height: 40px;\n    line-height: 40px;\n    border: 1px solid rgb(0, 188, 212);\n    border-radius: 4px;\n    justify-content: center;\n    cursor: pointer;\n    transition: 0.5s all;\n    position: relative;\n    &:hover {\n      color: rgb(238, 238, 238);\n      font-weight: bold;\n      font-size: 18px;\n    }\n    &:focus {\n      color: black;\n    }\n    &:after {\n      content: '';\n      background: white;\n      display: block;\n      position: absolute;\n      padding-top: 42px;\n      padding-left: 100%;\n      margin-left: 0px;\n      margin-top: 0;\n      opacity: 0;\n      transition: all 0.4s;\n    }\n    &:active:after {\n      padding: 0;\n      margin: 0;\n      opacity: 1;\n      transition: 0s;\n    }\n  }\n`;\n\nclass IconNovelWrite extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      content: '',\n    };\n  }\n  onChangeTitle = e => {\n    this.setState({ title: e.target.value });\n  };\n  onKeyDownTitle = e => {};\n  onChangeContent = e => {\n    this.setState({\n      content: e.target.value,\n    });\n  };\n  writeValidate = () => {\n    const { address } = this.props;\n    const { title, content } = this.state;\n    if (address === '') {\n      alert('로그인이 필요합니다.');\n      return false;\n    } else if (title === '') {\n      alert('제목을 입력해주세요');\n      return false;\n    } else if (content === '') {\n      alert('내용을 입력해주세요');\n      return false;\n    }\n    return true;\n  };\n  onClickWrite = async () => {\n    if (this.writeValidate() === false) {\n      return;\n    }\n    try {\n      //write 버튼 클릭\n      const { sendTxBuild } = IconSDK;\n      const { address } = this.props;\n      const { title, content } = this.state;\n\n      let msg = `${title}${window.SPLITER}${content}${\n        window.SPLITER\n      }${address}${window.SPLITER}${uuid()}`;\n      console.log('msg', msg);\n      console.log('IconConverter.fromUtf8(msg)', IconConverter.fromUtf8(msg));\n      const txObj = sendTxBuild({\n        methodName: 'addWriting',\n        params: {\n          msg: IconConverter.fromUtf8(msg),\n        },\n        from: address,\n        to: window.CONTRACT_ADDRESS,\n      });\n\n      console.log('txObj', txObj);\n      // from: address,\n      const tx = await IconConnect.sendTransaction(txObj);\n      console.log('tx', tx);\n      window.open(`https://tracker.icon.foundation/transaction/${tx}`);\n\n      this.setState({\n        title: '',\n        content: '',\n      });\n    } catch (error) {}\n  };\n  render() {\n    const { title, content } = this.state;\n    return (\n      <IconNovelWriteWrraper>\n        <div className=\"write-title-container\">\n          <BasicInput\n            label={'Title'}\n            inputName=\"write-title\"\n            onChangeText={this.onChangeTitle}\n            onKeyDown={this.onKeyDownTitle}\n            innerRef={this.emailInput}\n            value={title}\n            maxLength=\"30\"\n          />\n        </div>\n        <div className=\"write-content-container\">\n          <textarea\n            placeholder=\"Please write\"\n            onChange={this.onChangeContent}\n            value={content}\n            maxLength=\"500\"\n          />\n        </div>\n        <div className=\"write-button-container\">\n          <div className=\"write-button\" onClick={this.onClickWrite}>\n            Write\n          </div>\n        </div>\n      </IconNovelWriteWrraper>\n    );\n  }\n}\n\nexport default IconNovelWrite;\n","import React from 'react';\n\nexport default class LoadingForComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      errorFlag: false\n    };\n    this.errorTimer = null;\n  }\n\n  checkLoading = () => {\n    const { isLoadedDataList = [] } = this.props;\n    let result = false;\n    isLoadedDataList.forEach(item => {\n      //배열\n      if (Array.isArray(item) === true) {\n        if (item.length === 0) {\n          result = true;\n        }\n      }\n      //객체\n      else if (typeof item === 'object') {\n        if (Object.keys(item).length === 0) {\n          result = true;\n        }\n      } else if (typeof item === 'string') {\n        if (item === '') {\n          result = true;\n        }\n      } else if (typeof item === 'number') {\n        if (item === 0) {\n          result = true;\n        }\n      } else if (typeof item === 'boolean') {\n        if (item === false) {\n          result = true;\n        }\n      }\n    });\n    return result;\n  };\n\n  runErrorTimer = () => {\n    const { timeout = 10000, errorMode } = this.props;\n    if (this.errorTimer) {\n      this.clearRunErrorTimer();\n    }\n    this.errorTimer = setTimeout(() => {\n      //error관련 코드\n      if (errorMode) {\n        this.setState({ errorFlag: true });\n      }\n    }, timeout);\n  };\n\n  clearRunErrorTimer = () => {\n    clearTimeout(this.errorTimer);\n    this.errorTimer = null;\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      JSON.stringify(prevProps.isLoadedDataList) !==\n      JSON.stringify(this.props.isLoadedDataList)\n    ) {\n      let isLoading = this.checkLoading();\n      if (isLoading === true) {\n        this.runErrorTimer();\n      } else {\n        this.clearRunErrorTimer();\n      }\n      this.setState({\n        errorFlag: false,\n        isLoading: isLoading\n      });\n    }\n  }\n  componentDidMount() {\n    let isLoading = this.checkLoading();\n    if (isLoading === true) {\n      this.runErrorTimer();\n    } else {\n      this.clearRunErrorTimer();\n    }\n    this.setState({\n      isLoading: isLoading\n    });\n  }\n  componentWillUnmount() {\n    this.clearRunErrorTimer();\n  }\n\n  render() {\n    const { isLoading, errorFlag } = this.state;\n    const {\n      component,\n      loadingComponent = <div>loading!</div>,\n      errorComponent = <div>Error</div>,\n      errorMode\n    } = this.props;\n\n    if (errorMode && errorFlag) {\n      return errorComponent;\n    }\n    if (isLoading) {\n      return loadingComponent;\n    } else {\n      return component;\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport QRcode from 'qrcode.react';\nimport LoadingForComponent from './components/LoadingForComponent';\nimport IconConnect from './components/IconConnect';\nimport IconSDK from './components/icon-sdk';\nimport { IconConverter } from 'icon-sdk-js';\n\nconst IconNovelReadDetailWrapper = styled.div`\n  .read-title-container {\n    display: flex;\n    justify-content: space-between;\n    .support-list {\n      font-size: 14px;\n      padding: 5px;\n\n      cursor: pointer;\n      transition: 0.5s all;\n      position: relative;\n      &:hover {\n        color: rgb(238, 238, 238);\n        font-weight: bold;\n      }\n    }\n    .read-title {\n      font-size: 20px;\n      font-weight: 800;\n    }\n  }\n\n  .content-container {\n    margin-top: 30px;\n    .info-container {\n      display: flex;\n      justify-content: space-between;\n      .info-content {\n        display: flex;\n      }\n      .info {\n        margin-left: 10px;\n        margin-bottom: 20px;\n        &.button {\n          width: 100px;\n          box-sizing: border-box;\n          display: flex;\n          text-align: center;\n          font-size: 14px;\n          padding: 5px;\n          background-color: rgb(0, 188, 212);\n          color: white;\n          border: 1px solid rgb(0, 188, 212);\n          border-radius: 4px;\n          justify-content: center;\n          cursor: pointer;\n        }\n      }\n    }\n    .title {\n      padding: 10px;\n    }\n    .content {\n      word-break: break-word;\n      display: block;\n      padding: 10px;\n      border: 1px solid rgb(217, 217, 217);\n      border-radius: 4px;\n      height: calc(100vh - 325px);\n      overflow: auto;\n    }\n  }\n`;\n\nclass IconNovelReadDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      recommend: 0,\n    };\n  }\n  isFirst = true;\n  getRecommand = async () => {\n    try {\n      const selectItem = this.getSelectItem();\n      if (selectItem) {\n        this.isFirst = false;\n        const recommend = await IconSDK.iconService\n          .call(\n            IconSDK.callBuild({\n              methodName: 'getLikeCntById',\n              params: {\n                _id: IconConverter.toHex(selectItem.index),\n              },\n              to: window.CONTRACT_ADDRESS,\n            }),\n          )\n          .execute();\n        this.setState({\n          recommend: IconConverter.toNumber(recommend),\n        });\n      }\n    } catch (error) {}\n  };\n  componentDidMount() {\n    this.getRecommand();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.textObj !== this.props.textObj) {\n      this.getRecommand();\n    }\n  }\n  recommend = async () => {\n    try {\n      const selectItem = this.getSelectItem();\n      let address = this.props.address;\n      if (address) {\n        const txObj = IconSDK.sendTxBuild({\n          methodName: 'addLikeCnt',\n          params: {\n            _id: IconConverter.toHex(selectItem.index),\n          },\n          from: address,\n          to: window.CONTRACT_ADDRESS,\n        });\n        // from: address,\n        const tx = await IconConnect.sendTransaction(txObj);\n        //재조회\n        setTimeout(() => {\n          this.getRecommand();\n        }, 2000);\n      } else {\n        this.props.connectAddress(this.recommend);\n      }\n    } catch (error) {}\n  };\n  loadingRenderer = () => {\n    return <div>Loading</div>;\n  };\n  errorRenderer = () => {\n    return <div>Error</div>;\n  };\n  componentRenderer = () => {\n    const { recommend } = this.state;\n    let selectItem = this.getSelectItem();\n    return (\n      <div>\n        <div className=\"info-container\">\n          <div className=\"info-content\">\n            <div className=\"info\">추천수:{recommend}</div>\n          </div>\n\n          <div className=\"info button\" onClick={this.recommend}>\n            추천하기\n          </div>\n        </div>\n        <div className=\"title\">제목 : {selectItem.title}</div>\n        <div className=\"content\">\n          {selectItem.content.split('\\n').map((item, index) => {\n            return <div key={index}>{item}</div>;\n          })}\n        </div>\n      </div>\n    );\n  };\n  getSelectItem = () => {\n    let uuid = this.props.location.query.uuid;\n    let selectItem = this.props.textObj[uuid];\n    return selectItem;\n  };\n  render() {\n    let uuid = this.props.location.query.uuid;\n    let selectItem = this.getSelectItem();\n    if (!uuid || !selectItem) {\n      return null;\n    }\n\n    return (\n      <IconNovelReadDetailWrapper>\n        <div className=\"read-title-container\">\n          <div className=\"read-title\">\n            <div>Address : {selectItem.address}</div>\n            <span className=\"support-list\">\n              위주소나 qr코드로 후원하실수있습니다.\n            </span>\n          </div>\n          <div>\n            <QRcode value={selectItem.address} size={60} />\n          </div>\n        </div>\n        <div className=\"content-container\">\n          <LoadingForComponent\n            isLoadedDataList={[!!selectItem.address]}\n            component={this.componentRenderer()}\n            loadingComponent={this.componentRenderer()}\n            errorComponent={this.componentRenderer()}\n            errorMode={true}\n            timeout={15000}\n          />\n        </div>\n      </IconNovelReadDetailWrapper>\n    );\n  }\n}\n\nexport default IconNovelReadDetail;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport cn from \"classnames\";\nimport IconNovelDescription from \"./dAppSrc/IconNovelDescription\";\nimport IconNovelRead from \"./dAppSrc/IconNovelRead\";\nimport IconNovelWrite from \"./dAppSrc/IconNovelWrite\";\nimport IconNovelReadDetail from \"./dAppSrc/IconNovelReadDetail\";\nimport IconConnect from \"./dAppSrc/components/IconConnect\";\nimport IconSDK from \"./dAppSrc/components/icon-sdk\";\nimport { IconConverter } from \"icon-sdk-js\";\n\nconst AppWrraper = styled.div`\n  font-family: Noto Sans, AppleGothic, sans-serif;\n  .gnb-title {\n    display: flex;\n    background-color: rgb(0, 188, 212);\n    height: 64px;\n    line-height: 64px;\n    box-sizing: border-box;\n    color: white;\n    padding: 0 24px;\n    font-size: 24px;\n    font-weight: 500;\n    text-align: left;\n    justify-content: space-between;\n    .login {\n      cursor: pointer;\n      font-size: 16px;\n    }\n  }\n  .content {\n    display: flex;\n    .content-left {\n      flex: 1;\n      width: 250px;\n      color: rgba(0, 0, 0, 0.87);\n      background-color: rgb(255, 255, 255);\n      box-sizing: border-box;\n      -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n      box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 10px,\n        rgba(0, 0, 0, 0.23) 0px 3px 10px;\n      height: 100%;\n      width: 256px;\n      transform: translate(0px, 0px);\n      transition: transform 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n      border-radius: 0px;\n      overflow: auto;\n      .menu-sell-item:first-child {\n        margin-top: 10px;\n      }\n      .menu-sell-item {\n        cursor: pointer;\n        font-weight: 300;\n        box-sizing: border-box;\n        height: 50px;\n        padding: 15px;\n        margin: 0;\n        border: 0;\n        vertical-align: baseline;\n        -webkit-text-size-adjust: none;\n        font-style: normal;\n        transition: all 0.7s;\n        &:hover {\n          background-color: rgb(238, 238, 238);\n          font-weight: 600;\n        }\n        &.on {\n          background-color: rgb(238, 238, 238);\n          font-weight: 600;\n        }\n      }\n    }\n    .content-right {\n      width: calc(100vw - 256px);\n      padding: 30px 30px;\n    }\n  }\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let state = this.initState();\n    if (this.props.location.query.tab) {\n      state.selectMenu = this.props.location.query.tab;\n    } else {\n      state.selectMenu = \"decription\";\n    }\n    this.state = state;\n  }\n  initState = () => {\n    return {\n      selectItem: {},\n      textList: [],\n      address: \"\",\n      textObj: {}\n    };\n  };\n  menuRegist = [\n    {\n      key: \"decription\",\n      label: \"설명\"\n    },\n    {\n      key: \"read\",\n      label: \"글보기\"\n    },\n    {\n      key: \"write\",\n      label: \"글쓰기\"\n    }\n  ];\n  onClickSelectMenu = e => {\n    let data = e.target.getAttribute(\"data\");\n\n    this.props.history.push(`${window.location.pathname}?tab=${data}`);\n    this.setState({ selectMenu: data });\n  };\n\n  readDetailSelectMenu = item => {\n    this.props.history.push(\n      `${window.location.pathname}?tab=readDetail&uuid=${item.uuid}`\n    );\n    this.setState({ selectMenu: \"readDetail\", selectItem: item });\n  };\n\n  menuRenerer = () => {\n    const { selectMenu } = this.state;\n    return this.menuRegist.map((item, index) => {\n      let isOn = false;\n      if (\n        selectMenu === item.key ||\n        (selectMenu === \"readDetail\" && item.key === \"read\")\n      ) {\n        isOn = true;\n      }\n      return (\n        <div\n          className={cn(\"menu-sell-item\", { on: isOn })}\n          data={item.key}\n          onClick={this.onClickSelectMenu}\n          key={index}\n        >\n          {item.label}\n        </div>\n      );\n    });\n  };\n\n  getTextList = async () => {\n    try {\n      let result = [];\n      const resList = await IconSDK.iconService\n        .call(\n          IconSDK.callBuild({\n            methodName: \"getWriting\",\n            params: {},\n            to: window.CONTRACT_ADDRESS\n          })\n        )\n        .execute();\n      //split\n      resList.forEach(item => {\n        let converted = IconConverter.toUtf8(item);\n        let split = converted.split(window.SPLITER);\n        result.push(split);\n      });\n      let textObj = {};\n      let textList = [];\n      console.log(\"result\", result);\n      //가공\n      result.forEach((item, index) => {\n        if (item[3]) {\n          let target = {\n            title: item[0],\n            content: item[1],\n            address: item[2],\n            uuid: item[3],\n            index: index\n          };\n          textObj[item[3]] = target;\n          textList.push(target);\n        }\n      });\n      this.setState({ textList: textList, textObj });\n    } catch (error) {}\n  };\n\n  contentRenderer = () => {\n    const { selectMenu, selectItem, address, textList, textObj } = this.state;\n    switch (selectMenu) {\n      case \"decription\":\n        return <IconNovelDescription {...this.props} address={address} />;\n      case \"read\":\n        return (\n          <IconNovelRead\n            readDetailSelectMenu={this.readDetailSelectMenu}\n            {...this.props}\n            address={address}\n            getTextList={this.getTextList}\n            {...this.state}\n          />\n        );\n      case \"write\":\n        return (\n          <IconNovelWrite\n            {...this.props}\n            address={address}\n            getTextList={this.getTextList}\n          />\n        );\n      case \"readDetail\":\n        return (\n          <IconNovelReadDetail\n            selectItem={selectItem}\n            {...this.props}\n            address={address}\n            getTextList={this.getTextList}\n            {...this.state}\n            connectAddress={this.connectAddress}\n          />\n        );\n      default:\n        break;\n    }\n  };\n  connectAddress = async callback => {\n    try {\n      let address = await IconConnect.getAddress();\n      this.setState(\n        {\n          address: address\n        },\n        () => {\n          if (callback) {\n            callback();\n          }\n        }\n      );\n    } catch (error) {}\n  };\n\n  onClickLogin = () => {\n    const { address } = this.state;\n    if (address === \"\") {\n      this.connectAddress();\n    }\n  };\n\n  componentDidMount() {\n    this.getTextList();\n  }\n  render() {\n    const { selectMenu, address } = this.state;\n    return (\n      <AppWrraper>\n        <div className=\"gnb-title\">\n          <div>\n            <span className=\"icon\">Icon</span>ovel\n          </div>\n          <div className=\"login\" onClick={this.onClickLogin}>\n            {address !== \"\" ? address : \"login\"}\n          </div>\n        </div>\n        <div className=\"content\" style={{ height: \"calc( 100vh - 64px )\" }}>\n          <div className=\"content-left\">{this.menuRenerer()}</div>\n          <div className=\"content-right\">{this.contentRenderer()}</div>\n        </div>\n      </AppWrraper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport 'array-includes';\nimport 'custom-event-polyfill';\n\nfunction parseQueryString(locationSearch) {\n  let query = {};\n  if (locationSearch) {\n    locationSearch = locationSearch.replace('?', '');\n    const params = locationSearch.split('&');\n    params.forEach((param, idx) => {\n      const keyValue = param.split('=');\n      query[keyValue[0]] = decodeURIComponent(keyValue[1]);\n    });\n  }\n  return query;\n}\n\nReactDOM.render(\n    <BrowserRouter>\n      <Route\n        render={props => {\n          const newProps = {\n            ...props,\n            location: {\n              ...props.location,\n              query: parseQueryString(props.location.search),\n              parseQueryString:parseQueryString\n            }\n          };\n\n          return <App {...newProps} />;\n        }}\n      />\n    </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n","import IconService, { HttpProvider, IconBuilder } from \"icon-sdk-js\";\n\nlet provider;\nif (process && process.env && process.env.NODE_ENV === \"development\") {\n  provider = new HttpProvider(\"https://bicon.net.solidwallet.io/api/v3\");\n} else {\n  provider = new HttpProvider(\"https://wallet.icon.foundation/api/v3\");\n}\n\nconst iconService = new IconService(provider);\n\nconst {\n  CallBuilder,\n  CallTransactionBuilder,\n  IcxTransactionBuilder\n} = IconBuilder;\n\nconst callBuild = ({ from, methodName, to, params = {} } = {}) => {\n  const callBuilder = new CallBuilder();\n  const obj = callBuilder\n    .from(from)\n    .to(to)\n    .method(methodName)\n    .params(params)\n    .build();\n  return obj;\n};\n\nconst sendTxBuild = ({\n  from,\n  to,\n  methodName,\n  params = {},\n  networkId = window.NID,\n  stepLimit = \"0x13d620\",\n  value = \"0x0\"\n} = {}) => {\n  const callTransactionBuilder = new CallTransactionBuilder();\n  const obj = callTransactionBuilder\n    .nid(networkId)\n    .from(from)\n    .to(to)\n    .stepLimit(stepLimit)\n    .value(value)\n    .timestamp(`0x${(new Date().getTime() * 1000).toString(16)}`)\n    .method(methodName)\n    .params(params)\n    .version(\"0x3\")\n    .build();\n\n  return {\n    jsonrpc: \"2.0\",\n    method: \"icx_sendTransaction\",\n    params: obj,\n    id: 1\n  };\n};\n\nexport default {\n  iconService,\n  callBuild,\n  sendTxBuild\n};\n"],"sourceRoot":""}